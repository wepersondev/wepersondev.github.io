(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{375:function(e,t,s){"use strict";s.r(t);var r=s(42),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"realtime"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#realtime"}},[e._v("#")]),e._v(" Realtime")]),e._v(" "),s("p",[e._v("이번에는 실시간(Realtime) 기술만 똑 때가지고(?) 얘기 한번 해보겠습니다.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("사용자들은 더 이상 매번 리프레시를 하기 원하지 않는다.")])]),e._v(" "),s("p",[e._v("실시간(Realtime) 기술을 쓰는 핵심 이유는 이것입니다.")]),e._v(" "),s("h2",{attrs:{id:"serverless와-realtime의-아이러니"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#serverless와-realtime의-아이러니"}},[e._v("#")]),e._v(" Serverless와 Realtime의 아이러니")]),e._v(" "),s("p",[e._v("특히나 저희 같이 협업이 핵심인 서비스들은 특히나 실시간 기술이 필수 입니다. 매번 리프레시를 하지 않고 데이터를 실시간으로 갱신하는 방법은 많이 있습니다. 하지만 저희가 추구하는 Serverless를 기반으로 Realtime을 구축하는 방법은 많지 않습니다.")]),e._v(" "),s("p",[e._v("웹 서비스에서 일반적으로 실시간 처리를 위해서 제일 많이 사용하는 기술은 Web Socket입니다. Web Socket이란 ws 프로토콜을 기반으로 클라이언트와 서버사이에 지속적인 양방향 연결 및 데이터 전송이 가능한 기술입니다.")]),e._v(" "),s("p",[e._v("앞서도 여러번 얘기했지만 Serverless를 사용하는 이유는 인프라 관리를 최소화하고 생산성을 높이기 위함인데, Serverless의 최대 단점은 Web Socket과 같은 연결지향 프로토콜을 사용 할 수 없다는 것입니다. Function 단위로 로직이 실행되고 대부분 5분이내로 강제로 종료 되다보니 연결지향프로토콜을 사용해봐야 최대 유지 시간이 5분입니다.(Serverless에 집착하는 이유는 이것 말고도 많습니다.)")]),e._v(" "),s("h2",{attrs:{id:"해결책"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#해결책"}},[e._v("#")]),e._v(" 해결책")]),e._v(" "),s("p",[e._v("Serverless와 Realtime을 동시에 만족할 수 있는 서비스는 제가 찾은 것 중에는 대중적인것은 Firebase의 FireStore와 AWS의 AppSync 뿐이었습니다. AWS SA(Solution Architecture)들과 미팅을 해서 얘기해보아도 방법은 이것 뿐이 었습니다. 하지만 AppSync는 사용여부와 상관 없이 연결만 하고 있어도 비용이 꽤 나갑니다. 사용량에 비례해서 비용이 나가면 이해가 가지만 단순히 연결만 하고 있는데 비용이 나간다고 하니, 사용자가 늘어날 수록 비용이 기하급수적으로 늘어날 것이라 사용하기가 꺼려집니다. FireStore에는 연결 유지 비용이 없습니다. 애초에 Web Socket을 위해서 인스턴스를 띄우고 Auto Scale을 적용하고 세션의 종료 및 마이그레이션 처리를 하면 어려운 일도 아니긴 하지만은 그냥 Native로 Serverless와 Realtime을 바로 구축이 가능한 대중적인 서비스는 이것뿐이 찾지 못했습니다. (혹시나 비용, 생산성, 대중성을 고려하고 이거보다 좋은 방법이 있으시면 연락 부탁드립니다. 바로 모실 준비 하겠습니다.)")])])}),[],!1,null,null,null);t.default=a.exports}}]);